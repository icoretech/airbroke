name: airbroke

x-healthcheck-postgres: &postgres_healthcheck
  test: ['CMD-SHELL', 'pg_isready -U postgres']
  interval: 10s
  timeout: 5s
  retries: 5

services:
  db:
    image: bitnami/postgresql:17
    # command: postgres -c 'shared_buffers=128MB'
    environment:
      POSTGRESQL_PASSWORD: airbroke
      POSTGRESQL_DATABASE: airbroke_development
      POSTGRESQL_MAX_CONNECTIONS: 23
    volumes:
      - db_data_bitnami_17:/bitnami/postgresql
      # - ./prisma/pg-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - 5460:5432
    networks:
      - airbroke
    healthcheck: *postgres_healthcheck

  testdb:
    image: bitnami/postgresql:17
    # command: postgres -c 'shared_buffers=128MB'
    environment:
      POSTGRESQL_PASSWORD: airbroke
      POSTGRESQL_DATABASE: airbroke_test
      POSTGRESQL_MAX_CONNECTIONS: 23
    networks:
      - airbroke
    healthcheck: *postgres_healthcheck

  web:
    build:
      context: '.'
      dockerfile: Dockerfile.dev
    image: icoretech/airbroke:develop
    restart: always
    environment:
      DATABASE_URL: 'postgresql://postgres:airbroke@db/airbroke_development?connection_limit=8&connection_timeout=5'
      DIRECT_URL: 'postgresql://postgres:airbroke@db/airbroke_development'
    ports:
      - 3000:3000
    networks:
      - airbroke
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  test:
    image: icoretech/airbroke:develop
    command: yarn test
    restart: always
    environment:
      DATABASE_URL: 'postgresql://postgres:airbroke@testdb/airbroke_test?connection_limit=15'
      DIRECT_URL: 'postgresql://postgres:airbroke@testdb/airbroke_test'
      TESTING: 'true'
    volumes:
      - .:/app
    networks:
      - airbroke
    depends_on:
      testdb:
        condition: service_healthy

volumes:
  db_data_bitnami_17:
  npm_cache:
  yarn_cache:

networks:
  airbroke:
    name: airbroke
