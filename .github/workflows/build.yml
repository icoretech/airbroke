name: Build and publish

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/icoretech/airbroke
          labels: |
            io.artifacthub.package.category=monitoring-logging
            io.artifacthub.package.keywords=error,catcher,react,web,app,open,source,modern
            io.artifacthub.package.license=MIT
            io.artifacthub.package.logo-url=https://icoretech.github.io/helm/charts/airbroke/logo.png
            io.artifacthub.package.maintainers=[{"name":"Claudio Poli","email":"claudio@icorete.ch"}]
            io.artifacthub.package.readme-url=https://github.com/icoretech/airbroke/blob/main/README.md
            org.opencontainers.image.description=Airbroke is a a modern, React-based open source error catcher web application
            org.opencontainers.image.source=https://github.com/icoretech/airbroke
            org.opencontainers.image.title=Airbroke
            org.opencontainers.image.vendor=iCoreTech, Inc.
            org.opencontainers.image.documentation=https://github.com/icoretech/airbroke/blob/main/README.md
            org.opencontainers.image.url=https://airbroke.icorete.ch
            org.opencontainers.image.authors=Claudio Poli <claudio@icorete.ch>
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version={{version}}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
