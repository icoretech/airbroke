generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [citext, pgcrypto]
}

model project {
  id                       BigInt   @id @default(autoincrement())
  name                     String   @unique() @db.Citext
  api_key                  String   @unique()
  organization             String   @default("myorg")
  repo_provider            String   @default("github")
  repo_provider_api_key    String?
  repo_provider_api_secret String?
  repo_branch              String   @default("main")
  repo_issue_tracker       String?
  repo_url                 String?
  notices_count            BigInt   @default(0)
  created_at               DateTime @default(now()) @db.Timestamp(6)
  updated_at               DateTime @updatedAt @db.Timestamp(6)
  notices                  notice[]
}

model notice {
  id          BigInt       @id @default(autoincrement())
  project_id  BigInt
  env         String       @default("development") @db.Citext
  kind        String       @default("unknown") @db.Citext
  seen_count  BigInt       @default(1)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @updatedAt @db.Timestamp(6)
  project     project      @relation(fields: [project_id], references: [id], onDelete: Cascade)
  occurrences occurrence[]

  @@unique([project_id, env, kind])
  @@index([seen_count])
  @@index([updated_at])
}

model occurrence {
  id                 BigInt              @id @default(autoincrement())
  notice_id          BigInt
  message            String?             @db.Citext
  seen_count         BigInt              @default(1)
  backtrace          Json?               @default("{}")
  context            Json?               @default("{}")
  environment        Json?               @default("{}")
  session            Json?               @default("{}")
  params             Json?               @default("{}")
  created_at         DateTime            @default(now()) @db.Timestamp(6)
  updated_at         DateTime            @updatedAt @db.Timestamp(6)
  notice             notice              @relation(fields: [notice_id], references: [id], onDelete: Cascade)
  hourly_occurrences hourly_occurrence[]

  @@unique([notice_id, message])
  @@index([seen_count])
  @@index([updated_at])
}

model hourly_occurrence {
  id             BigInt     @id @default(autoincrement())
  occurrence_id  BigInt
  interval_start DateTime   @db.Timestamp(6)
  interval_end   DateTime   @db.Timestamp(6)
  count          BigInt     @default(0)
  occurrence     occurrence @relation(fields: [occurrence_id], references: [id], onDelete: Cascade)

  @@index([occurrence_id, interval_start, interval_end])
}
